[
  {
    "objectID": "posts/2021-04-25-Cantor-pairing-function/index.html",
    "href": "posts/2021-04-25-Cantor-pairing-function/index.html",
    "title": "The Cantor Pairing Function",
    "section": "",
    "text": "One surprising fact from set theory is that integers and rational numbers have the same cardinality as natural numbers. This can be proved by a standard trick named diagonal progression invented by Cantor. The underlying function is the Cantor pairing function. Yesterday I was writing codes to hash two integers and using the Cantor pairing function turns out to be a neat way.\nFormally, the Cantor pairing function \\(\\pi\\) is defined as:\n\\[\n\\begin{gathered}\n\\pi:\\mathbb{N} \\times \\mathbb{N} \\to \\mathbb{N} \\\\\n\\pi(k_1, k_2) := \\frac{1}{2} (k_1 + k_2)(k_1 + k_2 + 1) + k2\n\\end{gathered}\n\\]\nIt can also be easily extended to multiple dimensions cases:\n\\[\n\\begin{gathered}\n\\pi^{(n)}:\\mathbb{N}^n \\to \\mathbb{N} \\\\\n\\pi^{(n)}(k_1, \\ldots, k_{n-1}, k_n) := \\pi ( \\pi^{(n-1)}(k_1, \\ldots, k_{n-1}) , k_n), \\quad n&gt;2\n\\end{gathered}\n\\]\nThe Cantor pairing function is bijective. To prove that, we just need to invert it (details can be found in Wikepidia).\nSimple python and C++ implementations:\n\nPythonC++\n\n\n\ndef cantor_pairing(x, y):\n    return int((x + y) * (x + y + 1) / 2 + y)\n\n\ndef cantor_pairing_nd(*args):\n    if len(args) == 2:\n        return cantor_pairing(args[0], args[1])\n    return cantor_pairing(cantor_pairing_nd(*args[:-1]), args[-1])\n\n\ncantor_pairing_nd(1, 2, 3)\n\n\n\nstruct pair_hash\n{\n    std::size_t operator() (const std::pair&lt;int, int&gt;& p) const\n    {\n        return (p.first + p.second) * (p.first + p.second + 1) / 2 + p.second;\n    }\n};\n\nunordered_map&lt;pair&lt;int, int&gt;, int, pair_hash&gt; um;\num[make_pair(1,2)] = 0;\n\n\n\nTo see the connection between the diagonal progression and the Cantor pairing function, we can do a formal analysis or directly visualize its graphical shape. The arrow direction indicates the monotonic increase of the Cantor pairing function (by 1 each time):\n\n\nCode\nimport collections\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nd = {}\nfor i in range(1, 10):\n    for j in range(1, 10):\n        val = cantor_pairing(i, j)\n        d[val] = np.array((i, j))\nod = collections.OrderedDict(sorted(d.items()))\n\nplt.figure(facecolor=\"w\")\nplt.axis([0, 10, 0, 10])\nplt.axis(\"off\")\nfor k, v in od.items():\n    if v[0] == 9 and v[1] == 2:\n        break\n    plt.annotate(text=\"{}/{}\".format(*v), xy=v, ha=\"center\", va=\"center\")\n    if \"v0\" in locals():\n        plt.annotate(\n            text=\"\",\n            xy=v0 + (v - v0) * 0.2 / np.linalg.norm(v - v0),\n            xytext=v - (v - v0) * 0.2 / np.linalg.norm(v - v0),\n            arrowprops=dict(arrowstyle=\"&lt;-\"),\n        )\n    v0 = v\nplt.show()\n\n\n\n\n\n\n\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@online{li2021,\n  author = {Li, Chengkun},\n  title = {The {Cantor} {Pairing} {Function}},\n  date = {2021-04-25},\n  url = {https://pipme.github.io/posts/2021-04-25-Cantor-pairing-function},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nLi, Chengkun. 2021. “The Cantor Pairing Function.” April\n25, 2021. https://pipme.github.io/posts/2021-04-25-Cantor-pairing-function."
  },
  {
    "objectID": "posts/2023-06-10-Quarto-set-up/document-revealjs.html#references",
    "href": "posts/2023-06-10-Quarto-set-up/document-revealjs.html#references",
    "title": "Start Blogging with Quarto",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome! (Wilson and Izmailov 2022; Navarro 2022)\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page1 of posts.(Navarro 2022)\n\n\n\n\n\n\nNavarro, Danielle. 2022. “Porting a Distill Blog to Quarto.” April 20, 2022. https://blog.djnavarro.net/posts/2022-04-20_porting-to-quarto.\n\n\nWilson, Andrew Gordon, and Pavel Izmailov. 2022. “Bayesian Deep Learning and a Probabilistic Perspective of Generalization.” March 30, 2022. http://arxiv.org/abs/2002.08791.\n\n\nA FOOTNOTE"
  },
  {
    "objectID": "posts/2023-06-10-Quarto-set-up/index.html",
    "href": "posts/2023-06-10-Quarto-set-up/index.html",
    "title": "Start Blogging with Quarto",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome! (Wilson and Izmailov 2022; Navarro 2022)\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page1 of posts.(Navarro 2022)"
  },
  {
    "objectID": "posts/2023-06-10-Quarto-set-up/index.html#footnotes",
    "href": "posts/2023-06-10-Quarto-set-up/index.html#footnotes",
    "title": "Start Blogging with Quarto",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nA FOOTNOTE↩︎"
  },
  {
    "objectID": "posts/2023-06-11-De-Finetti-theorem/index-gist.html",
    "href": "posts/2023-06-11-De-Finetti-theorem/index-gist.html",
    "title": "De Finetti’s Theorem",
    "section": "",
    "text": "Theorem: A sequence of random variables \\((x_1, x_2, \\dots)\\) is infinitely exchangeable iff, for all n, \\[\np(x_1, x_2, \\dots, x_n) = \\int \\prod^{n}_{i=1} p(x_i|\\theta) P(d\\theta),\n\\] for some measure \\(P\\) on \\(\\theta\\).\n(See Jordan and Broderick 2010)\n\n\n\n\nReferences\n\nJordan, Michael I, and Tamara Broderick. 2010. “Lecture 1: History and De Finetti’s Theorem.” 2010. https://people.eecs.berkeley.edu/~jordan/courses/260-spring10/lectures/lecture1.pdf.\n\nReusehttps://creativecommons.org/licenses/by/4.0/CitationBibTeX citation:@online{li2023,\n  author = {Li, Chengkun},\n  title = {De {Finetti’s} {Theorem}},\n  date = {2023-06-11},\n  url = {https://pipme.github.io/posts/2023-06-11-De-Finetti-theorem/index-gist.html},\n  langid = {en}\n}\nFor attribution, please cite this work as:\nLi, Chengkun. 2023. “De Finetti’s Theorem.” June 11, 2023.\nhttps://pipme.github.io/posts/2023-06-11-De-Finetti-theorem/index-gist.html."
  },
  {
    "objectID": "blog+gist.html",
    "href": "blog+gist.html",
    "title": "All blogs and gists.",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nReading Time\n\n\n\n\n\n\nJun 11, 2023\n\n\nDe Finetti’s Theorem\n\n\n1 min\n\n\n\n\nJun 10, 2023\n\n\nStart Blogging with Quarto\n\n\n1 min\n\n\n\n\nApr 25, 2021\n\n\nThe Cantor Pairing Function\n\n\n3 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blogs",
    "section": "",
    "text": "Start Blogging with Quarto\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJun 10, 2023\n\n\nChengkun Li\n\n\n\n\n\n\n  \n\n\n\n\nThe Cantor Pairing Function\n\n\n\n\n\n\n\nhashing\n\n\nset theory\n\n\n\n\n\n\n\n\n\n\n\nApr 25, 2021\n\n\nChengkun Li\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Hi,",
    "section": "",
    "text": "What I cannot create, I do not understand.\n— Richard Feynman\n\n\nContact"
  },
  {
    "objectID": "gist.html",
    "href": "gist.html",
    "title": "Gists collection.",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nReading Time\n\n\n\n\n\n\nJun 11, 2023\n\n\nDe Finetti’s Theorem\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  }
]