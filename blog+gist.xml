<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>My Personal Blog</title>
<link>https://pipme.github.io/blog+gist.html</link>
<atom:link href="https://pipme.github.io/blog+gist.xml" rel="self" type="application/rss+xml"/>
<description>Personal Blog</description>
<generator>quarto-1.5.57</generator>
<lastBuildDate>Thu, 26 Sep 2024 00:00:00 GMT</lastBuildDate>
<item>
  <title>exp(x) overflow/underflow in Numpy (float64)</title>
  <dc:creator>Chengkun Li</dc:creator>
  <link>https://pipme.github.io/posts/2024-09-26-Float64/index-gist.html</link>
  <description><![CDATA[ 





<div id="65950641" class="cell" data-execution_count="1">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"></span>
<span id="cb1-3">np.seterr(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ignore"</span>)</span>
<span id="cb1-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Numpy float info:"</span>, np.finfo(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>))</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Numpy float info: Machine parameters for float64
---------------------------------------------------------------
precision =  15   resolution = 1.0000000000000001e-15
machep =    -52   eps =        2.2204460492503131e-16
negep =     -53   epsneg =     1.1102230246251565e-16
minexp =  -1022   tiny =       2.2250738585072014e-308
maxexp =   1024   max =        1.7976931348623157e+308
nexp =       11   min =        -max
smallest_normal = 2.2250738585072014e-308   smallest_subnormal = 4.9406564584124654e-324
---------------------------------------------------------------
</code></pre>
</div>
</div>
<div id="a2453c9d" class="cell" data-execution_count="2">
<details class="code-fold">
<summary>Binary search</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Binary search: find the minimal integer x such that np.exp(x) is not zero</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> find_minimal_exp_x():</span>
<span id="cb3-3">    left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span></span>
<span id="cb3-4">    right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb3-6">        mid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> right) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np.exp(mid) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb3-8">            left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mid</span>
<span id="cb3-9">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb3-10">            right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mid</span>
<span id="cb3-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> right</span>
<span id="cb3-12"></span>
<span id="cb3-13"></span>
<span id="cb3-14">min_int <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> find_minimal_exp_x()</span>
<span id="cb3-15"></span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Binary search: find the maximal integer x such that np.exp(x) is not infinity</span></span>
<span id="cb3-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> find_maximal_exp_x():</span>
<span id="cb3-19">    left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb3-20">    right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span></span>
<span id="cb3-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb3-22">        mid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> right) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np.exp(mid) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> np.inf:</span>
<span id="cb3-24">            left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mid</span>
<span id="cb3-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb3-26">            right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mid</span>
<span id="cb3-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> right</span>
<span id="cb3-28"></span>
<span id="cb3-29"></span>
<span id="cb3-30">max_int <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> find_maximal_exp_x()</span></code></pre></div>
</details>
</div>
<div id="728c922f" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"np.exp(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>min_int <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">) = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>exp(min_int <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"np.exp(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>min_int<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">) = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>exp(min_int)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>np.exp(-746) = 0.0
np.exp(-745) = 5e-324</code></pre>
</div>
</div>
<div id="0b9d06a5" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"np.exp(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>max_int <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">) = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>exp(max_int <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"np.exp(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>max_int<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">) = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>exp(max_int)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>np.exp(709) = 8.218407461554972e+307
np.exp(710) = inf</code></pre>
</div>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{li2024,
  author = {Li, Chengkun},
  title = {`Exp(x)` Overflow/Underflow in {Numpy} (Float64)},
  date = {2024-09-26},
  url = {https://pipme.github.io/posts/2024-09-26-Float64/index-gist.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-li2024" class="csl-entry quarto-appendix-citeas">
Li, Chengkun. 2024. <span>“`Exp(x)` Overflow/Underflow in Numpy
(Float64).”</span> September 26, 2024. <a href="https://pipme.github.io/posts/2024-09-26-Float64/index-gist.html">https://pipme.github.io/posts/2024-09-26-Float64/index-gist.html</a>.
</div></div></section></div> ]]></description>
  <category>Numpy</category>
  <category>Python</category>
  <guid>https://pipme.github.io/posts/2024-09-26-Float64/index-gist.html</guid>
  <pubDate>Thu, 26 Sep 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Mac OTF fonts installation</title>
  <dc:creator>Chengkun Li</dc:creator>
  <link>https://pipme.github.io/posts/2024-03-10-Mac-font/index-gist.html</link>
  <description><![CDATA[ 





<p>Download the required OTF fonts files, e.g., <a href="https://github.com/adobe-fonts/source-han-serif/tree/release/OTF/SimplifiedChinese">source-han-serif</a>. Then simply move <code>.otf</code> files to <code>~/Library/Fonts</code> folder. In <code>Font Book</code> application, now one can see the fonts in <code>My Fonts</code>.</p>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{li2024,
  author = {Li, Chengkun},
  title = {Mac {OTF} Fonts Installation},
  date = {2024-03-10},
  url = {https://pipme.github.io/posts/2024-03-10-Mac-font/index-gist.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-li2024" class="csl-entry quarto-appendix-citeas">
Li, Chengkun. 2024. <span>“Mac OTF Fonts Installation.”</span> March 10,
2024. <a href="https://pipme.github.io/posts/2024-03-10-Mac-font/index-gist.html">https://pipme.github.io/posts/2024-03-10-Mac-font/index-gist.html</a>.
</div></div></section></div> ]]></description>
  <category>Mac</category>
  <category>font</category>
  <category>LaTeX</category>
  <guid>https://pipme.github.io/posts/2024-03-10-Mac-font/index-gist.html</guid>
  <pubDate>Sun, 10 Mar 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>A Numpy caveat when referencing elements of an array</title>
  <dc:creator>Chengkun Li</dc:creator>
  <link>https://pipme.github.io/posts/2024-02-23-Numpy-caveat/index-gist.html</link>
  <description><![CDATA[ 





<p>Understanding when a view or copy for a Numpy array is returned is important, or else the array may be modified in place by mistake. An example below:</p>
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Numpy version: "</span>, np.__version__)</span>
<span id="cb1-4"></span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> print_result(test_array):</span>
<span id="cb1-7">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_array.copy()</span>
<span id="cb1-8">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb1-9">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(</span>
<span id="cb1-11">        <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'b = a[0], </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unchanged"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>allclose(a, test_array) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"changed"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb1-12">    )</span>
<span id="cb1-13"></span>
<span id="cb1-14">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_array.copy()</span>
<span id="cb1-15">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]]</span>
<span id="cb1-16">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(</span>
<span id="cb1-18">        <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'b = a[[0]], </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unchanged"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>allclose(a, test_array) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"changed"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb1-19">    )</span>
<span id="cb1-20"></span>
<span id="cb1-21">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_array.copy()</span>
<span id="cb1-22">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb1-23">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb1-24">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(</span>
<span id="cb1-25">        <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'b = a[0:1], </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unchanged"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>allclose(a, test_array) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"changed"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>,</span>
<span id="cb1-26">    )</span>
<span id="cb1-27"></span>
<span id="cb1-28"></span>
<span id="cb1-29"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"For 1D array:"</span>)</span>
<span id="cb1-30">print_result(np.zeros(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb1-31"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb1-32"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"For 2D array:"</span>)</span>
<span id="cb1-33">print_result(np.zeros((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Numpy version:  1.23.1
For 1D array:
b = a[0], unchanged
b = a[[0]], unchanged
b = a[0:1], changed
----------
For 2D array:
b = a[0], changed
b = a[[0]], unchanged
b = a[0:1], changed</code></pre>
</div>
</div>
<p>Note that the result is different for 1D or 2D Numpy arrays.</p>
<p>For more, check Numpy docs <a href="https://numpy.org/doc/stable/user/basics.copies.html">Copies and views</a>.</p>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{li2024,
  author = {Li, Chengkun},
  title = {A {Numpy} Caveat When Referencing Elements of an Array},
  date = {2024-02-23},
  url = {https://pipme.github.io/posts/2024-02-23-Numpy-caveat/index-gist.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-li2024" class="csl-entry quarto-appendix-citeas">
Li, Chengkun. 2024. <span>“A Numpy Caveat When Referencing Elements of
an Array.”</span> February 23, 2024. <a href="https://pipme.github.io/posts/2024-02-23-Numpy-caveat/index-gist.html">https://pipme.github.io/posts/2024-02-23-Numpy-caveat/index-gist.html</a>.
</div></div></section></div> ]]></description>
  <category>Numpy</category>
  <category>Python</category>
  <guid>https://pipme.github.io/posts/2024-02-23-Numpy-caveat/index-gist.html</guid>
  <pubDate>Fri, 23 Feb 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Search frequentist and Bayesian in GitHub</title>
  <dc:creator>Chengkun Li</dc:creator>
  <link>https://pipme.github.io/posts/2024-02-11-Github-search-frequentist-Bayesian/index-gist.html</link>
  <description><![CDATA[ 





<p>Search results of keywords “frequentist” and “Bayesian” in Github. Are Bayesians coding more?</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://pipme.github.io/posts/2024-02-11-Github-search-frequentist-Bayesian/image.png" class="img-fluid figure-img"></p>
<figcaption>Search result</figcaption>
</figure>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{li2024,
  author = {Li, Chengkun},
  title = {Search Frequentist and {Bayesian} in {GitHub}},
  date = {2024-02-11},
  url = {https://pipme.github.io/posts/2024-02-11-Github-search-frequentist-Bayesian/index-gist.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-li2024" class="csl-entry quarto-appendix-citeas">
Li, Chengkun. 2024. <span>“Search Frequentist and Bayesian in
GitHub.”</span> February 11, 2024. <a href="https://pipme.github.io/posts/2024-02-11-Github-search-frequentist-Bayesian/index-gist.html">https://pipme.github.io/posts/2024-02-11-Github-search-frequentist-Bayesian/index-gist.html</a>.
</div></div></section></div> ]]></description>
  <category>github</category>
  <guid>https://pipme.github.io/posts/2024-02-11-Github-search-frequentist-Bayesian/index-gist.html</guid>
  <pubDate>Sun, 11 Feb 2024 00:00:00 GMT</pubDate>
</item>
<item>
  <title>MathJax macros in Quarto</title>
  <dc:creator>Chengkun Li</dc:creator>
  <link>https://pipme.github.io/posts/2023-08-06-Mathjax/index-gist.html</link>
  <description><![CDATA[ 





<p>As a MathJax and javascript noob, it seems the most convenient way to define MathJax macros is to write a <a href="https://github.com/pipme/pipme.github.io/blob/main/_utils/mathjax_preamble.html">preamble file</a> and include it by:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">format</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">html</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb1-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">include-in-header</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> ../_utils/mathjax_preamble.html</span></span></code></pre></div>
<p>Example: <img src="https://latex.codecogs.com/png.latex?%0A%5Cpdv%7B%5Crho%7D%7Bt%7D%20+%20%5Cdiv%20(%5Crho%20%5Cu)%20=%200%0A"></p>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{li2023,
  author = {Li, Chengkun},
  title = {MathJax Macros in {Quarto}},
  date = {2023-08-06},
  url = {https://pipme.github.io/posts/2023-08-06-Mathjax/index-gist.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-li2023" class="csl-entry quarto-appendix-citeas">
Li, Chengkun. 2023. <span>“MathJax Macros in Quarto.”</span> August 6,
2023. <a href="https://pipme.github.io/posts/2023-08-06-Mathjax/index-gist.html">https://pipme.github.io/posts/2023-08-06-Mathjax/index-gist.html</a>.
</div></div></section></div> ]]></description>
  <category>tips</category>
  <category>MathJax</category>
  <category>Quarto</category>
  <guid>https://pipme.github.io/posts/2023-08-06-Mathjax/index-gist.html</guid>
  <pubDate>Sun, 06 Aug 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Python tools</title>
  <dc:creator>Chengkun Li</dc:creator>
  <link>https://pipme.github.io/posts/2023-07-17-Python-tools/index-gist.html</link>
  <description><![CDATA[ 





<section id="ruff-linter" class="level2">
<h2 class="anchored" data-anchor-id="ruff-linter">Ruff linter</h2>
<p><a href="https://github.com/astral-sh/ruff">Ruff</a> is an incredibly fast linter. It’s since Ruff that I actually start to use a Python linter instead of turning off the annoying warnings.</p>
<p>For VSCode integration I use <a href="https://github.com/astral-sh/ruff-vscode">ruff-vscode</a>.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{li2023,
  author = {Li, Chengkun},
  title = {Python Tools},
  date = {2023-07-17},
  url = {https://pipme.github.io/posts/2023-07-17-Python-tools/index-gist.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-li2023" class="csl-entry quarto-appendix-citeas">
Li, Chengkun. 2023. <span>“Python Tools.”</span> July 17, 2023. <a href="https://pipme.github.io/posts/2023-07-17-Python-tools/index-gist.html">https://pipme.github.io/posts/2023-07-17-Python-tools/index-gist.html</a>.
</div></div></section></div> ]]></description>
  <category>tips</category>
  <guid>https://pipme.github.io/posts/2023-07-17-Python-tools/index-gist.html</guid>
  <pubDate>Mon, 17 Jul 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Tobit likelihood</title>
  <dc:creator>Chengkun Li</dc:creator>
  <link>https://pipme.github.io/posts/2023-06-16-Tobit-likelihood/index-gist.html</link>
  <description><![CDATA[ 





<section id="definition" class="level2">
<h2 class="anchored" data-anchor-id="definition">Definition</h2>
<ul>
<li>Latent variable: <img src="https://latex.codecogs.com/png.latex?f_i"></li>
<li>Observation: <img src="https://latex.codecogs.com/png.latex?y_i"></li>
</ul>
<p>Suppose the observation is censored from above at <img src="https://latex.codecogs.com/png.latex?y_U"> and below at <img src="https://latex.codecogs.com/png.latex?y_L"> (type I Tobit model), i.e., <img src="https://latex.codecogs.com/png.latex?%0Ay_i=%20%5Cbegin%7Bcases%7Dy_i%5E*%20&amp;%20%5Ctext%20%7B%20if%20%7D%20y_L%3Cy_i%5E*%3Cy_U,%20%5C%5C%20y_L%20&amp;%20%5Ctext%20%7B%20if%20%7D%20y_i%5E*%20%5Cleq%20y_L,%20%5C%5C%20y_U%20&amp;%20%5Ctext%20%7B%20if%20%7D%20y_i%5E*%20%5Cgeq%20y_U.%20%5Cend%7Bcases%7D%0A"> If <img src="https://latex.codecogs.com/png.latex?y_i%5E%5Cstar%20%5Csim%20%5Cmathcal%7BN%7D(f_i,%5Csigma_i%5E2)">, then the Tobit likelihood is, <img src="https://latex.codecogs.com/png.latex?%0Ap(y_i%20%7C%20f_i)%20=%20%5Cbegin%7Bcases%7D%0A%5Cmathcal%7BN%7D(y_i%7Cf_i,%20%5Csigma_i%5E2)%20&amp;%20%5Ctext%20%7B%20if%20%7D%20y_L%3Cy_i%20%3Cy_U,%20%5C%5C%0A%5CPhi(y_L%20%7C%20f_i,%20%5Csigma_i%5E2)%20&amp;%20%5Ctext%20%7B%20if%20%7D%20y_i%20=%20y_L,%20%5C%5C%0A1%20-%20%5CPhi(y_U%20%7C%20f_i,%20%5Csigma_i%5E2)%20&amp;%20%5Ctext%20%7B%20if%20%7D%20y_i%20=%20y_U,%0A%5Cend%7Bcases%7D%0A"> where <img src="https://latex.codecogs.com/png.latex?%5CPhi"> is the CDF of standard normal, <img src="https://latex.codecogs.com/png.latex?%5CPhi(y_L%20%7C%20f_i,%20%5Csigma_i%5E2)%20%5Ctriangleq%20%5CPhi(%5Cfrac%7By_L%20-%20f_i%7D%7B%5Csigma_i%7D)">.</p>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{li2023,
  author = {Li, Chengkun},
  title = {Tobit Likelihood},
  date = {2023-06-16},
  url = {https://pipme.github.io/posts/2023-06-16-Tobit-likelihood/index-gist.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-li2023" class="csl-entry quarto-appendix-citeas">
Li, Chengkun. 2023. <span>“Tobit Likelihood.”</span> June 16, 2023. <a href="https://pipme.github.io/posts/2023-06-16-Tobit-likelihood/index-gist.html">https://pipme.github.io/posts/2023-06-16-Tobit-likelihood/index-gist.html</a>.
</div></div></section></div> ]]></description>
  <category>likelihood</category>
  <guid>https://pipme.github.io/posts/2023-06-16-Tobit-likelihood/index-gist.html</guid>
  <pubDate>Fri, 16 Jun 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>De Finetti’s theorem</title>
  <dc:creator>Chengkun Li</dc:creator>
  <link>https://pipme.github.io/posts/2023-06-11-De-Finetti-theorem/index-gist.html</link>
  <description><![CDATA[ 





<p><strong>Theorem</strong>: A sequence of random variables <img src="https://latex.codecogs.com/png.latex?(x_1,%20x_2,%20%5Cdots)"> is infinitely exchangeable iff, for all n, <img src="https://latex.codecogs.com/png.latex?%0Ap(x_1,%20x_2,%20%5Cdots,%20x_n)%20=%20%5Cint%20%5Cprod%5E%7Bn%7D_%7Bi=1%7D%20p(x_i%7C%5Ctheta)%20P(d%5Ctheta),%0A"> for some measure <img src="https://latex.codecogs.com/png.latex?P"> on <img src="https://latex.codecogs.com/png.latex?%5Ctheta">.</p>
<p><span class="citation" data-cites="jordanLectureHistoryFinetti2010">(See Jordan and Broderick 2010)</span></p>


<section id="bibliography" class="level1 unnumbered">


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-jordanLectureHistoryFinetti2010" class="csl-entry">
Jordan, Michael I, and Tamara Broderick. 2010. <span>“Lecture 1: <span>History</span> and <span>De Finetti</span>’s <span>Theorem</span>.”</span> 2010. <a href="https://people.eecs.berkeley.edu/~jordan/courses/260-spring10/lectures/lecture1.pdf">https://people.eecs.berkeley.edu/~jordan/courses/260-spring10/lectures/lecture1.pdf</a>.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{li2023,
  author = {Li, Chengkun},
  title = {De {Finetti’s} Theorem},
  date = {2023-06-11},
  url = {https://pipme.github.io/posts/2023-06-11-De-Finetti-theorem/index-gist.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-li2023" class="csl-entry quarto-appendix-citeas">
Li, Chengkun. 2023. <span>“De Finetti’s Theorem.”</span> June 11, 2023.
<a href="https://pipme.github.io/posts/2023-06-11-De-Finetti-theorem/index-gist.html">https://pipme.github.io/posts/2023-06-11-De-Finetti-theorem/index-gist.html</a>.
</div></div></section></div> ]]></description>
  <category>theorem</category>
  <guid>https://pipme.github.io/posts/2023-06-11-De-Finetti-theorem/index-gist.html</guid>
  <pubDate>Sun, 11 Jun 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Personal Obsidian and Zotero best practices</title>
  <dc:creator>Chengkun Li</dc:creator>
  <link>https://pipme.github.io/posts/2023-06-11-Obsidian-Zotero-tips/index-gist.html</link>
  <description><![CDATA[ 





<section id="obsidian" class="level2">
<h2 class="anchored" data-anchor-id="obsidian">Obsidian</h2>
<p>The Obsidian plugins I am using:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> calendar</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> cm-editor-syntax-highlight-obsidian</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> obsidian-citation-plugin</span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> obsidian-completr</span>
<span id="cb1-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> obsidian-latex</span>
<span id="cb1-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> obsidian-latex-suite</span>
<span id="cb1-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> obsidian-pandoc</span>
<span id="cb1-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> obsidian-vault-statistics-plugin</span>
<span id="cb1-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> periodic-notes</span>
<span id="cb1-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> recent-files-obsidian</span>
<span id="cb1-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> table-editor-obsidian</span></code></pre></div>
</section>
<section id="zotero" class="level2">
<h2 class="anchored" data-anchor-id="zotero">Zotero</h2>
<p>Zotero plugins:</p>
<ul>
<li>Zotfile</li>
<li>Better BibTex</li>
<li>MarkDBConnect</li>
</ul>


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{li2023,
  author = {Li, Chengkun},
  title = {Personal {Obsidian} and {Zotero} Best Practices},
  date = {2023-06-11},
  url = {https://pipme.github.io/posts/2023-06-11-Obsidian-Zotero-tips/index-gist.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-li2023" class="csl-entry quarto-appendix-citeas">
Li, Chengkun. 2023. <span>“Personal Obsidian and Zotero Best
Practices.”</span> June 11, 2023. <a href="https://pipme.github.io/posts/2023-06-11-Obsidian-Zotero-tips/index-gist.html">https://pipme.github.io/posts/2023-06-11-Obsidian-Zotero-tips/index-gist.html</a>.
</div></div></section></div> ]]></description>
  <category>tips</category>
  <guid>https://pipme.github.io/posts/2023-06-11-Obsidian-Zotero-tips/index-gist.html</guid>
  <pubDate>Sun, 11 Jun 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Quarto tips</title>
  <dc:creator>Chengkun Li</dc:creator>
  <link>https://pipme.github.io/posts/2023-06-11-Quarto-tips/index-gist.html</link>
  <description><![CDATA[ 





<section id="building-the-website" class="level2">
<h2 class="anchored" data-anchor-id="building-the-website">Building the website</h2>
<p>Unicode <code>\u200B</code> for zero width space, e.g., in <code>_quarto.yml</code> I used it for an item with only an icon <i class="bi bi-card-list"></i> in the navigation bar. Note that I tried HTML’s <code>&amp;#8203;</code> but it doesn’t work.</p>
<p>Extensions for adding icons such as google scholar <i class="ai  ai-google-scholar"></i> and 500px <i class="fa-brands fa-500px" aria-label="500px"></i> (see the website’s footer):</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> quarto-ext</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   └── fontawesome</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> schochastics</span>
<span id="cb1-5">    <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> academicons</span></code></pre></div>
<p>For publishing a Quarto website, I recommend using the second option in the <a href="https://quarto.org/docs/publishing/github-pages.html">official documentation</a>. After set up, simply call:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> publish gh-pages <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--no-prompt</span></span></code></pre></div>
</section>
<section id="known-issues" class="level2">
<h2 class="anchored" data-anchor-id="known-issues">Known issues</h2>
<p>No option to hide <code>Edit this page</code> or enforce it to be on the left sidebar when the table of contents is empty. <a href="https://github.com/quarto-dev/quarto-cli/issues/5283">Issue#5283</a></p>
</section>
<section id="for-trials" class="level2">
<h2 class="anchored" data-anchor-id="for-trials">For trials</h2>
<p><span class="citation" data-cites="gentonClassesKernelsMachine2001">(Genton 2001)</span></p>
</section>
<section id="latex" class="level2">
<h2 class="anchored" data-anchor-id="latex">LaTeX</h2>
<p>Visible in pdf only. ### plain LaTeX Just a sample algorithm:</p>


</section>
<section id="bibliography" class="level1 unnumbered">


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-gentonClassesKernelsMachine2001" class="csl-entry">
Genton, Marc G. 2001. <span>“Classes of <span>Kernels</span> for <span>Machine Learning</span>: <span>A Statistics Perspective</span>.”</span> <em>Journal of Machine Learning Research</em> 2: 299–312. <a href="https://www.jmlr.org/papers/v2/genton01a">https://www.jmlr.org/papers/v2/genton01a</a>.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{li2023,
  author = {Li, Chengkun},
  title = {Quarto Tips},
  date = {2023-06-11},
  url = {https://pipme.github.io/posts/2023-06-11-Quarto-tips/index-gist.html},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-li2023" class="csl-entry quarto-appendix-citeas">
Li, Chengkun. 2023. <span>“Quarto Tips.”</span> June 11, 2023. <a href="https://pipme.github.io/posts/2023-06-11-Quarto-tips/index-gist.html">https://pipme.github.io/posts/2023-06-11-Quarto-tips/index-gist.html</a>.
</div></div></section></div> ]]></description>
  <category>tips</category>
  <guid>https://pipme.github.io/posts/2023-06-11-Quarto-tips/index-gist.html</guid>
  <pubDate>Sun, 11 Jun 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Start Blogging with Quarto</title>
  <dc:creator>Chengkun Li</dc:creator>
  <link>https://pipme.github.io/posts/2023-06-10-Quarto-set-up/</link>
  <description><![CDATA[ 





<p>Quarto seems to be a great choice for posting with executable codes and it’s nice that one can generate pdfs, slides etc. from a quasi-markdown file with unified styles (qmd). So I decided to start blogging with Quarto and probably make slides with it in the future as the web-based solution (revealjs) looks elegant and promising in the long run.</p>
<p>Building a site with Quarto is relatively easy and interesting. The documentation is very nicely written. You could find some useful tips <a href="../../posts/2023-06-11-Quarto-tips/index-gist.html">here</a>. See <span class="citation" data-cites="navarro2022">Navarro (2022)</span> for more work-through details.</p>
<p>By the way, I fell in love with writing in markdown since the birth of another great tool <a href="https://obsidian.md/">Obsidian</a> and gradually realize that habitual writing is essential for a researcher, for building one’s second brain, understanding things better and sharing knowledge.</p>
<p>For Obsidian, I put some useful plugins <a href="../../posts/2023-06-11-Obsidian-Zotero-tips/index-gist.html">here</a>, together with Zotero’s. Maybe I could write a blog for sharing my workflows in academic life. I will probably wait until I get more familiar with Quarto and see how they fit with daily needs.</p>
<p>Welcome to my blog 😃!</p>


<section id="bibliography" class="level1 unnumbered">


</section>

<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-navarro2022" class="csl-entry">
Navarro, Danielle. 2022. <span>“Porting a Distill Blog to Quarto.”</span> April 20, 2022. <a href="https://blog.djnavarro.net/posts/2022-04-20_porting-to-quarto">https://blog.djnavarro.net/posts/2022-04-20_porting-to-quarto</a>.
</div>
</div></section><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{li2023,
  author = {Li, Chengkun},
  title = {Start {Blogging} with {Quarto}},
  date = {2023-06-10},
  url = {https://pipme.github.io/posts/2023-06-10-Quarto-set-up/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-li2023" class="csl-entry quarto-appendix-citeas">
Li, Chengkun. 2023. <span>“Start Blogging with Quarto.”</span> June 10,
2023. <a href="https://pipme.github.io/posts/2023-06-10-Quarto-set-up/">https://pipme.github.io/posts/2023-06-10-Quarto-set-up/</a>.
</div></div></section></div> ]]></description>
  <category>news</category>
  <guid>https://pipme.github.io/posts/2023-06-10-Quarto-set-up/</guid>
  <pubDate>Sat, 10 Jun 2023 00:00:00 GMT</pubDate>
</item>
<item>
  <title>The Cantor Pairing Function</title>
  <dc:creator>Chengkun Li</dc:creator>
  <link>https://pipme.github.io/posts/2020-04-25-cantor-pairing/</link>
  <description><![CDATA[ 





<p>One surprising fact from set theory is that integers and rational numbers have the same cardinality as natural numbers. This can be proved by a standard trick named diagonal progression invented by Cantor. The underlying function is the Cantor pairing function. Yesterday I was writing codes to hash two integers and using the Cantor pairing function turns out to be a neat way.</p>
<p>Formally, the Cantor pairing function <img src="https://latex.codecogs.com/png.latex?%5Cpi"> is defined as:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bgathered%7D%0A%5Cpi:%5Cmathbb%7BN%7D%20%5Ctimes%20%5Cmathbb%7BN%7D%20%5Cto%20%5Cmathbb%7BN%7D%20%5C%5C%0A%5Cpi(k_1,%20k_2)%20:=%20%5Cfrac%7B1%7D%7B2%7D%20(k_1%20+%20k_2)(k_1%20+%20k_2%20+%201)%20+%20k2%0A%5Cend%7Bgathered%7D%0A"></p>
<p>It can also be easily extended to multiple dimensions cases:</p>
<p><img src="https://latex.codecogs.com/png.latex?%0A%5Cbegin%7Bgathered%7D%0A%5Cpi%5E%7B(n)%7D:%5Cmathbb%7BN%7D%5En%20%5Cto%20%5Cmathbb%7BN%7D%20%5C%5C%0A%5Cpi%5E%7B(n)%7D(k_1,%20%5Cldots,%20k_%7Bn-1%7D,%20k_n)%20:=%20%5Cpi%20(%20%5Cpi%5E%7B(n-1)%7D(k_1,%20%5Cldots,%20k_%7Bn-1%7D)%20,%20k_n),%20%5Cquad%20n%3E2%0A%5Cend%7Bgathered%7D%0A"></p>
<p>The Cantor pairing function is bijective. To prove that, we just need to invert it (<a href="https://en.wikipedia.org/wiki/Pairing_function#Inverting_the_Cantor_pairing_function%5D">details</a> can be found in Wikepidia).</p>
<p>Simple python and C++ implementations:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Python</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">C++</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> cantor_pairing(x, y):</span>
<span id="cb1-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>((x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y)</span>
<span id="cb1-3"></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> cantor_pairing_nd(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args):</span>
<span id="cb1-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(args) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb1-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> cantor_pairing(args[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], args[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb1-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> cantor_pairing(cantor_pairing_nd(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>args[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]), args[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb1-9"></span>
<span id="cb1-10"></span>
<span id="cb1-11">cantor_pairing_nd(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> pair_hash</span>
<span id="cb2-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>size_t <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">operator</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>pair<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&amp;</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span></span>
<span id="cb2-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-5">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>first <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>second<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>first <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>second <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>second<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb2-8"></span>
<span id="cb2-9">unordered_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>pair<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> pair_hash<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> um<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-10">um<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>make_pair<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</div>
</div>
</div>
<p>To see the connection between the diagonal progression and the Cantor pairing function, we can do a formal analysis or directly visualize its graphical shape. The arrow direction indicates the monotonic increase of the Cantor pairing function (by 1 each time):</p>
<div class="cell" data-execution_count="2">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> collections</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-4"></span>
<span id="cb3-5">d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb3-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>):</span>
<span id="cb3-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>):</span>
<span id="cb3-8">        val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cantor_pairing(i, j)</span>
<span id="cb3-9">        d[val] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array((i, j))</span>
<span id="cb3-10">od <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> collections.OrderedDict(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(d.items()))</span>
<span id="cb3-11"></span>
<span id="cb3-12">plt.figure(facecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>)</span>
<span id="cb3-13">plt.axis([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>])</span>
<span id="cb3-14">plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb3-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> k, v <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> od.items():</span>
<span id="cb3-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> v[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> v[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb3-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb3-18">    plt.annotate(text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">format</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>v), xy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>v, ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>)</span>
<span id="cb3-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v0"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">locals</span>():</span>
<span id="cb3-20">        plt.annotate(</span>
<span id="cb3-21">            text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>,</span>
<span id="cb3-22">            xy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>v0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> v0) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> np.linalg.norm(v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> v0),</span>
<span id="cb3-23">            xytext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> v0) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> np.linalg.norm(v <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> v0),</span>
<span id="cb3-24">            arrowprops<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(arrowstyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&lt;-"</span>),</span>
<span id="cb3-25">        )</span>
<span id="cb3-26">    v0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v</span>
<span id="cb3-27">plt.show()</span></code></pre></div>
</details>
<div class="cell-output cell-output-display">
<div>
<figure class="figure">
<p><img src="https://pipme.github.io/posts/2020-04-25-cantor-pairing/index_files/figure-html/cell-3-output-1.png" width="540" height="389" class="figure-img"></p>
</figure>
</div>
</div>
</div>



<a onclick="window.scrollTo(0, 0); return false;" id="quarto-back-to-top"><i class="bi bi-arrow-up"></i> Back to top</a><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-reuse"><h2 class="anchored quarto-appendix-heading">Reuse</h2><div class="quarto-appendix-contents"><div><a rel="license" href="https://creativecommons.org/licenses/by/4.0/">CC BY 4.0</a></div></div></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{li2020,
  author = {Li, Chengkun},
  title = {The {Cantor} {Pairing} {Function}},
  date = {2020-04-25},
  url = {https://pipme.github.io/posts/2020-04-25-cantor-pairing/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-li2020" class="csl-entry quarto-appendix-citeas">
Li, Chengkun. 2020. <span>“The Cantor Pairing Function.”</span> April
25, 2020. <a href="https://pipme.github.io/posts/2020-04-25-cantor-pairing/">https://pipme.github.io/posts/2020-04-25-cantor-pairing/</a>.
</div></div></section></div> ]]></description>
  <category>hashing</category>
  <category>set theory</category>
  <guid>https://pipme.github.io/posts/2020-04-25-cantor-pairing/</guid>
  <pubDate>Sat, 25 Apr 2020 00:00:00 GMT</pubDate>
</item>
</channel>
</rss>
