---
title: "A Numpy caveat when referencing elements of an array"
date: "2024-02-23"
date-modified: last-modified
categories: [Numpy, Python]
format:
  html: default
---

Understanding when a view or copy for a Numpy array is returned is important, or else the array may be modified in place by mistake. An example below:
```{python}
import numpy as np

print("Numpy version: ", np.__version__)


def print_result(test_array):
    a = test_array.copy()
    b = a[0]
    b += 1
    print(
        f'b = a[0], {"unchanged" if np.allclose(a, test_array) else "changed"}',
    )

    a = test_array.copy()
    b = a[[0]]
    b += 1
    print(
        f'b = a[[0]], {"unchanged" if np.allclose(a, test_array) else "changed"}',
    )

    a = test_array.copy()
    b = a[0:1]
    b += 1
    print(
        f'b = a[0:1], {"unchanged" if np.allclose(a, test_array) else "changed"}',
    )


print("For 1D array:")
print_result(np.zeros(2))
print("-" * 10)
print("For 2D array:")
print_result(np.zeros((2, 2)))
```

Note that the result is different for 1D or 2D Numpy arrays.

For more, check Numpy docs [Copies and views](https://numpy.org/doc/stable/user/basics.copies.html).
